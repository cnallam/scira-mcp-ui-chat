#!/usr/bin/env node
import{spawn as x}from"child_process";import{fileURLToPath as S}from"url";import{dirname as h,join as r}from"path";import t from"fs";import g from"get-port";import v from"open";var w=h(S(import.meta.url)),a=r(w,".."),o=r(a,".next","standalone"),m=r(o,"server.js"),n=r(a,".next","static"),s=r(o,".next","static");if(t.existsSync(n)&&!t.existsSync(s)){t.mkdirSync(r(o,".next"),{recursive:!0});try{t.symlinkSync(n,s,"junction")}catch{t.cpSync(n,s,{recursive:!0})}}var i=r(a,"public"),c=r(o,"public");if(t.existsSync(i)&&!t.existsSync(c))try{t.symlinkSync(i,c,"junction")}catch{t.cpSync(i,c,{recursive:!0})}t.existsSync(m)||(console.error("Missing .next/standalone/server.js. Run: npm run build"),process.exit(1));var l=await g({port:[3e3,3001,3002,8787]}),d="127.0.0.1",p=x(process.execPath,[m],{cwd:o,env:{...process.env,NODE_ENV:"production",PORT:String(l),HOSTNAME:d},stdio:["ignore","pipe","pipe"]});p.stdout.on("data",e=>process.stdout.write(e));p.stderr.on("data",e=>process.stderr.write(e));p.on("exit",e=>process.exit(e??0));var u=`http://${d}:${l}`,y=!1;for(let e=0;e<120;e++)try{await fetch(u),y=!0;break}catch{await new Promise(f=>setTimeout(f,250))}console.log(`
${y?"\u2705":"\u26A0\uFE0F"} Running \u2192 ${u}
`);try{await v(u)}catch{}
